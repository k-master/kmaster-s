并发专题：

锁的思想分类：
    悲观锁：悲观并发控制(PCC),消极态度，认为每次访问数据时，总是会发生冲突，因此，每次访问必须先锁住数据，完成访问或者读写后再释放锁
    保证同一时间只有单个线程可以访问，实现数据排他性，适用于写多读少的场景，效率低，但是数据安全性高。解决的问题是读-写冲突，写写冲突

    乐观锁：(OCC),也叫无锁，认为即使在并发环境下，外界对数据的操作不会产生冲突，所以不会去加锁，而是会在提交更新，写数据时才会正式对数据的冲突与否进行
    检测。如果发现冲突，则重试，或者切换为悲观锁。解决的问题是写-写冲突


*JVM
    线程私有空间如何操作
    存储区域如何分布

*JAVA
    关键字作用：
    关键字原理：
    线程池源码解析：
    多线程安全工具类：


*MYSQL
    并发产生的问题：
        脏读：读取其他事务未提交的数据
        幻读：一个事务先读取了某个范围的数量，同时另一个事务新增了这个范围的数据，再次读取发现两次得到的结果不一致
        不可重复读：一个事务在读取数据时，另一个事务修改了数据，导致前后读取的数据不一致
    MVCC
    锁的概念：


*分布式
    分布式事务
    分布式锁解决方案：
        redisson
        etcd
        zookeeper
        红锁

*es
    并发模式，乐观锁模式
    版本号机制

*kafka
    消费端消费逻辑，多线程消费逻辑
    cloud-stream消费源码
    kafka消费模型


